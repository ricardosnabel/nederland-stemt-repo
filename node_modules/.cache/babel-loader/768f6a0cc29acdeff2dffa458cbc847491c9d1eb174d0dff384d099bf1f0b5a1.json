{"ast":null,"code":"import React, { memo } from \"react\";\nfunction VoteData(data) {\n  const colaBrands = [{\n    name: \"Coca\",\n    count: 0\n  }, {\n    name: \"Pepsi\",\n    count: 0\n  }, {\n    name: \"Dr Pepper\",\n    count: 0\n  }];\n  const waterBrands = [{\n    name: \"Spa\",\n    count: 0\n  }, {\n    name: \"Evian\",\n    count: 0\n  }, {\n    name: \"Chaudfontaine\",\n    count: 0\n  }, {\n    name: \"Huismerk\",\n    count: 0\n  }, {\n    name: \"Kraan\",\n    count: 0\n  }];\n  const beerBrands = [{\n    name: \"Heineken\",\n    count: 0\n  }, {\n    name: \"Hertog Jan\",\n    count: 0\n  }, {\n    name: \"Brand\",\n    count: 0\n  }, {\n    name: \"Amstel\",\n    count: 0\n  }, {\n    name: \"Jupiler\",\n    count: 0\n  }, {\n    name: \"Grolsch\",\n    count: 0\n  }];\n  const candyBrands = [{\n    name: \"Zure Matten\",\n    count: 0\n  }, {\n    name: \"Engelse Drop\",\n    count: 0\n  }, {\n    name: \"Kauwgom\",\n    count: 0\n  }, {\n    name: \"Chocola\",\n    count: 0\n  }];\n  const fruits = [{\n    name: \"Appel\",\n    count: 0\n  }, {\n    name: \"Banaan\",\n    count: 0\n  }, {\n    name: \"Watermeloen\",\n    count: 0\n  }, {\n    name: \"Aardbei\",\n    count: 0\n  }, {\n    name: \"Ananas\",\n    count: 0\n  }];\n  const pizzas = [{\n    name: \"Margerita\",\n    count: 0\n  }, {\n    name: \"Pepperoni\",\n    count: 0\n  }, {\n    name: \"Salami\",\n    count: 0\n  }, {\n    name: \"Calzone\",\n    count: 0\n  }, {\n    name: \"Quattro Formaggi\",\n    count: 0\n  }, {\n    name: \"Quattro Stagioni\",\n    count: 0\n  }];\n  const drinkCategories = [{\n    name: \"Cola\",\n    data: colaBrands\n  }, {\n    name: \"Water\",\n    data: waterBrands\n  }, {\n    name: \"Bier\",\n    data: beerBrands\n  }];\n  const foodCategories = [{\n    name: \"Snoep\",\n    data: candyBrands\n  }, {\n    name: \"Fruit\",\n    data: fruits\n  }, {\n    name: \"Pizza's\",\n    data: pizzas\n  }];\n  if (data.subjectdata.subjectname === \"Drinken\") {\n    data.setVoteCount(drinkCategories);\n  } else if (data.subjectdata.subjectname === \"Eten\") {\n    data.setVoteCount(foodCategories);\n  } else {\n    data.setVoteCount(\"Deze categorie bestaat nog niet\");\n  }\n}\n_c = VoteData;\nexport default _c2 = /*#__PURE__*/memo(VoteData);\nvar _c, _c2;\n$RefreshReg$(_c, \"VoteData\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","memo","VoteData","data","colaBrands","name","count","waterBrands","beerBrands","candyBrands","fruits","pizzas","drinkCategories","foodCategories","subjectdata","subjectname","setVoteCount","_c","_c2","$RefreshReg$"],"sources":["/home/ricardosnabel/repos/nederland-stemt-repo/src/data/VoteData.js"],"sourcesContent":["import React, { memo } from \"react\";\n\n\nfunction VoteData(data){\n    const colaBrands = [{name: \"Coca\", count: 0}, {name: \"Pepsi\", count: 0}, {name: \"Dr Pepper\", count: 0},];\n    const waterBrands = [{name: \"Spa\", count: 0}, {name: \"Evian\", count: 0}, {name: \"Chaudfontaine\", count: 0}, {name: \"Huismerk\", count: 0}, {name: \"Kraan\", count: 0}];\n    const beerBrands = [{name: \"Heineken\", count: 0}, {name: \"Hertog Jan\", count: 0}, {name: \"Brand\", count: 0}, {name: \"Amstel\", count: 0}, {name: \"Jupiler\", count: 0}, {name: \"Grolsch\", count: 0}];\n\n    const candyBrands = [{name: \"Zure Matten\", count: 0}, {name: \"Engelse Drop\", count: 0}, {name: \"Kauwgom\", count: 0}, {name: \"Chocola\", count: 0}];\n    const fruits = [{name: \"Appel\", count: 0}, {name: \"Banaan\", count: 0}, {name: \"Watermeloen\", count: 0}, {name: \"Aardbei\", count: 0}, {name: \"Ananas\", count: 0}];\n    const pizzas = [{name: \"Margerita\", count: 0}, {name: \"Pepperoni\", count: 0}, {name: \"Salami\", count: 0}, {name: \"Calzone\", count: 0}, {name: \"Quattro Formaggi\", count: 0}, {name: \"Quattro Stagioni\", count: 0}];\n\n    const drinkCategories = [{name: \"Cola\", data: colaBrands}, {name: \"Water\", data: waterBrands}, {name: \"Bier\", data: beerBrands}];\n    const foodCategories = [{name: \"Snoep\", data: candyBrands}, {name: \"Fruit\", data: fruits}, {name: \"Pizza's\", data: pizzas}];\n\n    if (data.subjectdata.subjectname === \"Drinken\"){\n        data.setVoteCount(drinkCategories);\n    } else if (data.subjectdata.subjectname === \"Eten\"){\n        data.setVoteCount(foodCategories);\n    } else {\n        data.setVoteCount(\"Deze categorie bestaat nog niet\");\n    }\n}\n\nexport default memo(VoteData);"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}